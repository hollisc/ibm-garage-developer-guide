{"version":3,"sources":["webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.module.scss","webpack:///./src/pages/workshop/cd/index.mdx","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.module.scss","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageHeader/PageHeader.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/EditLink/EditLink.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/index.js","webpack:///./node_modules/gatsby-theme-carbon/src/components/PageTabs/PageTabs.js","webpack:///./src/gatsby-theme-carbon/templates/Default.js"],"names":["module","exports","name","_frontmatter","PageDescription","props","console","warn","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","mdxType","parentName","isMDXComponent","PageHeader","title","theme","tabs","className","cx","styles","pageHeader","withTabs","length","darkMode","id","text","EditLink","relativePagePath","repositoryProp","repository","useStaticQuery","site","siteMetadata","baseUrl","subDirectory","href","branch","row","link","PageTabs","render","this","slug","currentTab","split","filter","Boolean","slice","pageTabs","map","tab","slugifiedTab","slugify","lower","strict","selected","currentTabRegex","RegExp","replace","key","selectedItem","listItem","to","tabsContainer","list","React","Component","Default","pageContext","children","location","Title","frontmatter","titleType","frontmatterTheme","description","keywords","interiorTheme","useMetadata","pathPrefix","pathname","Layout","homepage","pageTitle","pageDescription","pageKeywords","label","Main","padded","Utils"],"mappings":"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","file":"component---src-pages-workshop-cd-index-mdx-5ba52ef3c3cce194db45.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"EditLink-module--bx--text-truncate--end--2pqje\",\"bxTextTruncateFront\":\"EditLink-module--bx--text-truncate--front--3_lIE\",\"link\":\"EditLink-module--link--1qzW3\",\"row\":\"EditLink-module--row--1B9Gk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageTabs-module--bx--text-truncate--end--267NA\",\"bxTextTruncateFront\":\"PageTabs-module--bx--text-truncate--front--3xEQF\",\"tabsContainer\":\"PageTabs-module--tabs-container--8N4k0\",\"list\":\"PageTabs-module--list--3eFQc\",\"listItem\":\"PageTabs-module--list-item--nUmtD\",\"link\":\"PageTabs-module--link--1mDJ1\",\"selectedItem\":\"PageTabs-module--selected-item--YPVr3\"};","import * as React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/runner/work/ibm-garage-developer-guide/ibm-garage-developer-guide/node_modules/gatsby-theme-carbon/src/templates/Default.js\";\nimport Globals from 'gatsby-theme-carbon/src/templates/Globals';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst PageDescription = makeShortcode(\"PageDescription\");\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <PageDescription mdxType=\"PageDescription\">\n      <p>{`Promote an Application using CD with GitOps and ArgoCD`}</p>\n    </PageDescription>\n    <div {...{\n      \"className\": \"gatsby-resp-iframe-wrapper\",\n      \"style\": {\n        \"paddingBottom\": \"56.25%\",\n        \"position\": \"relative\",\n        \"height\": \"0\",\n        \"overflow\": \"hidden\"\n      }\n    }}>{` `}<iframe parentName=\"div\" {...{\n        \"src\": \"https://www.youtube.com/embed/Fr85xbcM_es\",\n        \"frameBorder\": \"0\",\n        \"allow\": \"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture\",\n        \"allowFullScreen\": true,\n        \"style\": {\n          \"position\": \"absolute\",\n          \"top\": \"0\",\n          \"left\": \"0\",\n          \"width\": \"100%\",\n          \"height\": \"100%\"\n        }\n      }}></iframe>{` `}</div>\n    <ol>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Prerequisites`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Complete lab `}<a parentName=\"li\" {...{\n              \"href\": \"./ci\"\n            }}>{`Deploy an Application using CI Pipelines with Tekton`}</a>{`.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Set `}<inlineCode parentName=\"p\">{`TOOLKIT_USERNAME`}</inlineCode>{` environment variable replace `}<inlineCode parentName=\"p\">{`user1`}</inlineCode>{` with assigned usernames`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`TOOLKIT_USERNAME=user1\n\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Set `}<inlineCode parentName=\"p\">{`TOOLKIT_PROJECT`}</inlineCode>{` environment variable replace `}<inlineCode parentName=\"p\">{`project1`}</inlineCode>{` or `}<inlineCode parentName=\"p\">{`projectx`}</inlineCode>{` based on user id assigned`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`TOOLKIT_PROJECT=project1\n\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Verify Application is deployed in `}<strong parentName=\"p\">{`QA`}</strong></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Select ArgoCD from the Console Link and login using OpenShift login`}</li>\n          <li parentName=\"ul\">{`Filter Applications by name `}<inlineCode parentName=\"li\">{`\\${TOOLKIT_PROJECT}-qa`}</inlineCode>{` (ie project1-qa)`}</li>\n          <li parentName=\"ul\">{`Select the application `}<inlineCode parentName=\"li\">{`master-qa-\\${TOOLKIT_PROJECT}-app`}</inlineCode>{` (ie master-qa-project1-app)`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Verify Application is running in the QA namespace corresponding to your username `}<inlineCode parentName=\"p\">{`\\${TOOLKIT_PROJECT}-qa`}</inlineCode></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Select `}<strong parentName=\"li\">{`Developer`}</strong>{` perspective, select project `}<inlineCode parentName=\"li\">{`\\${TOOLKIT_PROJECT}-qa`}</inlineCode>{` and then select `}<strong parentName=\"li\">{`Topology`}</strong>{` from the Console and see the application running`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Setup environment variable `}<inlineCode parentName=\"p\">{`GIT_OPS_URL`}</inlineCode>{` for the git url using the value from previous step or as following`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`GIT_OPS_URL=http://\\${TOOLKIT_USERNAME}:password@$(oc get route -n tools gogs --template='{{.spec.host}}')/toolkit/gitops\necho GIT_OPS_URL=\\${GIT_OPS_URL}\n\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Clone the git repository and change directory`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`cd $HOME\ngit clone $GIT_OPS_URL\ncd gitops\n\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Review the `}<inlineCode parentName=\"p\">{`qa`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`staging`}</inlineCode>{` directory in the git repository`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`ls -l qa/\nls -l staging/\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Promote the application from `}<strong parentName=\"p\">{`QA`}</strong>{` to `}<strong parentName=\"p\">{`STAGING`}</strong>{` by copying the app manifest files using git`}</p>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`git config --local user.email \"\\${TOOLKIT_USERNAME}@example.com\"\ngit config --local user.name \"\\${TOOLKIT_USERNAME}\"\n\ncp -a qa/\\${TOOLKIT_PROJECT}/ staging/\\${TOOLKIT_PROJECT}/\n\ngit add .\ngit commit -m \"Promote Application from QA to STAGING environment for $TOOLKIT_PROJECT\"\ngit push -u origin master\n\n`}</code></pre>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Verify Application is deployed in `}<strong parentName=\"p\">{`STAGING`}</strong></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Select ArgoCD from the Console Link and login using OpenShift login`}</li>\n          <li parentName=\"ul\">{`Filter Applications by namespace `}<inlineCode parentName=\"li\">{`\\${TOOLKIT_PROJECT}-staging`}</inlineCode>{` (ie project1-staging)`}</li>\n          <li parentName=\"ul\">{`Select the application `}<inlineCode parentName=\"li\">{`master-staging-\\${TOOLKIT_PROJECT}-app`}</inlineCode>{` (ie master-staging-project1-app)`}</li>\n          <li parentName=\"ul\">{`Click `}<strong parentName=\"li\">{`Refresh`}</strong></li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Verify Application is running in the `}<strong parentName=\"p\">{`STAGING`}</strong>{` namespace corresponding to your username `}<inlineCode parentName=\"p\">{`\\${TOOLKIT_PROJECT}-qa`}</inlineCode></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Select `}<strong parentName=\"li\">{`Developer`}</strong>{` perspective, select project `}<inlineCode parentName=\"li\">{`\\${TOOLKIT_PROJECT}-staging`}</inlineCode>{` and then select `}<strong parentName=\"li\">{`Topology`}</strong>{` from the Console and see the application running`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Propose a change for the Application in `}<strong parentName=\"p\">{`STAGING`}</strong></p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Update the replica count and create a new git branch in remote repo`}</li>\n        </ul>\n        <pre parentName=\"li\"><code parentName=\"pre\" {...{\n            \"className\": \"language-bash\"\n          }}>{`cat > staging/\\${TOOLKIT_PROJECT}/app/values.yaml <<EOF\nglobal: {}\napp:\n  replicaCount: 2\nEOF\n\ngit diff\n\ngit add .\ngit checkout -b \\${TOOLKIT_PROJECT}-pr1\ngit commit -m \"Update Application in \\${TOOLKIT_PROJECT}-staging namespace\"\ngit push -u origin \\${TOOLKIT_PROJECT}-pr1\n\n`}</code></pre>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Open Git Ops from Console Link`}</li>\n          <li parentName=\"ul\">{`Select toolkit/gitops git repository`}</li>\n          <li parentName=\"ul\">{`Create a Pull Request`}</li>\n          <li parentName=\"ul\">{`Select Pull Request`}</li>\n          <li parentName=\"ul\">{`Click `}<strong parentName=\"li\">{`New Pull Request`}</strong></li>\n          <li parentName=\"ul\">{`Select from `}<inlineCode parentName=\"li\">{`compare`}</inlineCode>{` dropdown the branch `}<inlineCode parentName=\"li\">{`\\${TOOLKIT_PROJECT}-pr1`}</inlineCode></li>\n          <li parentName=\"ul\">{`Enter a title like `}<inlineCode parentName=\"li\">{`Update replica count for app in namespace $TOOLKIT_PROJECT`}</inlineCode></li>\n          <li parentName=\"ul\">{`Enter a Comment like `}<inlineCode parentName=\"li\">{`We need more instances business is growing Yay!`}</inlineCode></li>\n          <li parentName=\"ul\">{`click `}<strong parentName=\"li\">{`Create Pull Request`}</strong></li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Review the PR follow the change management process established by your team.`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Click Merge Pull Request`}</li>\n          <li parentName=\"ul\">{`Click Delete Branch`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Review that application is scales out`}</p>\n        <ul parentName=\"li\">\n          <li parentName=\"ul\">{`Review in ArgoCD UI, it takes about 4 minutes to sync, you can click `}<strong parentName=\"li\">{`Refresh`}</strong></li>\n          <li parentName=\"ul\">{`Review in OpenShift Console, click the Deployment circle details shows 2 Pods.`}</li>\n        </ul>\n      </li>\n      <li parentName=\"ol\">\n        <p parentName=\"li\">{`Congratulations you finished this activity, continue with the lab `}<a parentName=\"p\" {...{\n            \"href\": \"../inventory\"\n          }}>{`Deploy a 3 tier Microservice using React, Node.js, and Java`}</a></p>\n      </li>\n    </ol>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bxTextTruncateEnd\":\"PageHeader-module--bx--text-truncate--end--mZWeX\",\"bxTextTruncateFront\":\"PageHeader-module--bx--text-truncate--front--3zvrI\",\"pageHeader\":\"PageHeader-module--page-header--3hIan\",\"darkMode\":\"PageHeader-module--dark-mode--hBrwL\",\"withTabs\":\"PageHeader-module--with-tabs--3nKxA\",\"text\":\"PageHeader-module--text--o9LFq\"};","import PageHeader from './PageHeader';\n\nexport default PageHeader;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport cx from 'classnames';\nimport styles from './PageHeader.module.scss';\n\nconst PageHeader = ({ title, theme, tabs = [] }) => (\n  <div\n    className={cx(styles.pageHeader, {\n      [styles.withTabs]: tabs.length,\n      [styles.darkMode]: theme === 'dark',\n    })}>\n    <div className=\"bx--grid\">\n      <div className=\"bx--row\">\n        <div className=\"bx--col-lg-12\">\n          <h1 id=\"page-title\" className={styles.text}>\n            {title}\n          </h1>\n        </div>\n      </div>\n    </div>\n  </div>\n);\n\nPageHeader.propTypes = {\n  /**\n   * Specify the title for the page\n   */\n  title: PropTypes.node,\n};\n\nexport default PageHeader;\n","import EditLink from './EditLink';\n\nexport default EditLink;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { graphql, useStaticQuery } from 'gatsby';\n\nimport { link, row } from './EditLink.module.scss';\n\nconst EditLink = ({ relativePagePath, repository: repositoryProp }) => {\n  const {\n    site: {\n      siteMetadata: { repository },\n    },\n  } = useStaticQuery(graphql`\n    query REPOSITORY_QUERY {\n      site {\n        siteMetadata {\n          repository {\n            baseUrl\n            subDirectory\n            branch\n          }\n        }\n      }\n    }\n  `);\n\n  const { baseUrl, subDirectory, branch } = repositoryProp || repository;\n\n  const href = `${baseUrl}/edit/${branch}${subDirectory}/src/pages${relativePagePath}`;\n\n  return baseUrl ? (\n    <div className={`bx--row ${row}`}>\n      <div className=\"bx--col\">\n        <a className={link} href={href}>\n          Edit this page on GitHub\n        </a>\n      </div>\n    </div>\n  ) : null;\n};\n\nEditLink.propTypes = {\n  repository: PropTypes.shape({\n    baseUrl: PropTypes.string,\n    subDirectory: PropTypes.string,\n    branch: PropTypes.string,\n  }),\n  relativePagePath: PropTypes.string,\n};\n\nexport default EditLink;\n","import PageTabs from './PageTabs';\n\nexport default PageTabs;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'gatsby';\nimport slugify from 'slugify';\nimport cx from 'classnames';\n\nimport {\n  tabsContainer,\n  list,\n  selectedItem,\n  listItem,\n  link,\n} from './PageTabs.module.scss';\n\nexport default class PageTabs extends React.Component {\n  render() {\n    const { tabs, slug } = this.props;\n    const currentTab = slug.split('/').filter(Boolean).slice(-1)[0];\n\n    const pageTabs = tabs.map((tab) => {\n      const slugifiedTab = slugify(tab, { lower: true, strict: true });\n      const selected = slugifiedTab === currentTab;\n      // matches with or without trailing slash: /?\n      // matches with or without hash link: (#.*)?\n      const currentTabRegex = new RegExp(`${currentTab}/?(#.*)?$`);\n      const href = slug.replace(currentTabRegex, slugifiedTab);\n      return (\n        <li key={tab} className={cx({ [selectedItem]: selected }, listItem)}>\n          <Link className={link} to={`${href}`}>\n            {tab}\n          </Link>\n        </li>\n      );\n    });\n\n    return (\n      <div className={tabsContainer}>\n        <div className=\"bx--grid\">\n          <div className=\"bx--row\">\n            <div className=\"bx--col-lg-12 bx--col-no-gutter\">\n              <nav>\n                <ul className={list}>{pageTabs}</ul>\n              </nav>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nPageTabs.propTypes = {\n  tabs: PropTypes.array,\n  slug: PropTypes.string,\n};\n","import React from 'react';\nimport slugify from 'slugify';\nimport {graphql, useStaticQuery} from 'gatsby';\n\nimport Utils from 'gatsby-theme-carbon/src/components/Utils';\nimport Layout from 'gatsby-theme-carbon/src/components/Layout';\nimport PageHeader from 'gatsby-theme-carbon/src/components/PageHeader';\nimport EditLink from 'gatsby-theme-carbon/src/components/EditLink';\nimport PageTabs from 'gatsby-theme-carbon/src/components/PageTabs';\nimport Main from 'gatsby-theme-carbon/src/components/Main';\nimport useMetadata from 'gatsby-theme-carbon/src/util/hooks/useMetadata';\n\n// Copy of gatsby-theme-carbon/src/templates/Default with the NextPrevious widget removed\n\nconst Default = ({ pageContext, children, location, Title }) => {\n    const { frontmatter = {}, relativePagePath, titleType } = pageContext;\n    const {\n        tabs,\n        title,\n        theme: frontmatterTheme,\n        description,\n        keywords,\n    } = frontmatter;\n\n    const { interiorTheme } = useMetadata();\n\n    // get the path prefix if it exists\n    const {\n        site: { pathPrefix },\n    } = useStaticQuery(graphql`\n    query PATH_PREFIX_QUERY1 {\n      site {\n        pathPrefix\n      }\n    }\n  `);\n\n    // let gatsby handle prefixing\n    const slug = pathPrefix\n        ? location.pathname.replace(pathPrefix, '')\n        : location.pathname;\n\n    const getCurrentTab = () => {\n        if (!tabs) return '';\n        return (\n            slug.split('/').filter(Boolean).slice(-1)[0] ||\n            slugify(tabs[0], { lower: true })\n        );\n    };\n\n    const currentTab = getCurrentTab();\n\n    const theme = frontmatterTheme || interiorTheme;\n\n    return (\n        <Layout\n            tabs={tabs}\n            homepage={false}\n            theme={theme}\n            pageTitle={title}\n            pageDescription={description}\n            pageKeywords={keywords}\n            titleType={titleType}>\n            <PageHeader\n                title={Title ? <Title /> : title}\n                label=\"label\"\n                tabs={tabs}\n                theme={theme}\n            />\n            {tabs && <PageTabs slug={slug} tabs={tabs} currentTab={currentTab} />}\n            <Main padded>\n                {children}\n                <EditLink relativePagePath={relativePagePath} />\n            </Main>\n            {/*Remove NextPrevious*/}\n            <Utils />\n        </Layout>\n    );\n};\n\nexport default Default;\n"],"sourceRoot":""}